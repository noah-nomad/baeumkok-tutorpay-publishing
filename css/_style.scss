@import "common";

@mixin mobile-area_media {
  @media (max-width: 767px) {
    @content;
  }
}

//클릭효과
//::after 사용을 최소화하기 위해 클릭 시 배경색 변경으로 수정
@mixin click-btn_bg($color: #fff, $if: null) {
  @if $if == null {
    &:hover {background-color: darken($color, 2%);}
    &:active {background-color: darken($color, 5%);}
  } @else {
    &:hover {background-color: lighten($color, 2%);}
    &:active {background-color: lighten($color, 5%);}
  }
}

.blind {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
}

.pc_only {
  display: block;

  @include mobile-area_media {
    display: none;
  }
}

.mo_only {
  display: none;

  @include mobile-area_media {
    display: block;
  }
}

.scroll-prevent {
  overflow: hidden;
  height: 100vh;
}

i {
  display: inline-block;
}

button {
  i {
    margin-left: 0.666666em;
    width: 1.066666em;
    height: 1.066666em;
    vertical-align: text-top;
  }
}

.btn {
  @extend %btn;

  &.login {
    margin-top: 8*$unit;
    height: 54*$unit;
  }
}

.text_btn {
  padding: 8*$unit;
  width: auto;
  @extend %m12;
  color: $color-primary;

  @include click-btn_bg();
}

%btn {
  //기본
  display: block;
  padding: 0 12*$unit;
  height: 40*$unit;
  border: 1px solid transparent;
  border-radius: 100*$unit;
  background-color: $color-primary;
  @include click_btn_bg($color-primary); //배경색이랑 같은 값을 파라미터로 넣어주기
  font-size: 15*$unit;
  color: #fff;
  word-break: keep-all;
  line-height: 1.2;

  //비활성화
  &:disabled {
    border-color: $dark-30;
    background-color: $dark-30;
    color: #fff;
    cursor: default;
  }

  //테두리
  &.bo {
    //기본
    border-color: $color-primary;
    background-color: #fff;
    @include click_btn_bg(); //배경색이랑 같은 값을 파라미터로 넣어주기
    color: $color-primary;

    &:disabled {
      border-color: $dark-30;
      background-color: $dark-18;
      color: $dark-30;
    }

    //회색
    &.grey {
      border-color: $dark-30;
      color: $dark-60;
    }
  }

  &.round {
    border-radius: 40*$unit;
  }
}

.logo {
  position: relative;
  background-image: url("../img/logo_header.svg");
  background-size: 100% auto;

  & > * {
    display: block;
    padding-top: 28%;
  }
}

$form-box-height: 40*$unit;
$form-box-m-height: 40*$unit;
.form {
  &_wrap {
    margin: 20*$unit 0;
    padding: 0 30*$unit;
  }

  &_ul {
  }

  &_li {
    display: flex;
    flex-wrap: wrap;
    margin-bottom: 20*$unit; //폼 리스트 사이간격

    & > * {
      flex: 0 0 auto;
    }

    .form_in {
      flex: 1 1 auto;
    }

    &:last-child {
      margin-bottom: 0;
    }

    input {
      height: $form-box-height;

      @include mobile-area_media {
        height: $form-box-m-height;
      }
    }

    @at-root .nowrap {
      flex-wrap: nowrap;

      .form {
        &_ttl {
          margin-bottom: 0;
          width: 100*$unit; //타이틀 너비
          min-height: $form-box-height;

          @include mobile-area_media {
            min-height: $form-box-m-height;
          }
        }
      }
    }
  }

  &_ttl {
    display: flex;
    align-items: center;
    margin-bottom: 8*$unit;
    width: 100%;
    font-size: 16*$unit;
    font-weight: $medium;

    @include mobile-area_media {
      font-size: 14*$unit;
    }

    small {
      color: $dark-30;
    }

    b {
      flex: 1;
      font-size: 12*$unit;
      font-weight: $bold;
      color: $color-primary;
      text-align: right;
    }
  }

  &_attach_txt {
    flex: 1;
    font-size: 12*$unit;
    color: $color-primary;
    text-align: right;
  }

  &_in {
    width: 100%;
    min-height: $form-box-height;

    @include mobile-area_media {
      min-height: $form-box-m-height;
    }

    & > * {
      margin-top: 4*$unit; //폼 인풋 사이간격

      &:first-child {
        margin-top: 0;
      }
    }

    .select {
      width: 100%;

      &::before {
        right: 1em;
        background-size: 1.333333em;

        @include mobile-area_media {
          right: 0.6em;
          background-size: 1em;
        }
      }
    }
  }

  .inline {
    display: flex;
    align-items: center;
    min-height: $form-box-height;

    @include mobile-area_media {
      min-height: $form-box-m-height;
    }

    & > * {
      flex: 1 1 auto;
    }

    .btn {
      flex: 0 0 auto;
    }

    & > * {
      margin-right: 8*$unit;

      &:last-child {
        margin-right: 0;
      }
    }

    .btn {
      width: auto;
      min-width: 25%; //인풋과 버튼이 나란히 있을 때 버튼의 너비 최소값
    }
  }

  .btn {
    height: $form-box-height;

    @include mobile-area_media {
      height: $form-box-m-height;
    }
  }
}

/*바인딩*/
.bind {
  display: flex;
  align-items: center;
  padding: 6*$unit 10*$unit;
  min-height: 40*$unit;
  font-weight: $bold;
}

//힌트문구
.hint {
  padding: 0.8em 0;
  font-size: 12*$unit;
  font-weight: $medium;
  color: $dark-30;
  word-break: keep-all;

  em {
    color: $color-primary;
  }

  .line_btn {
    display: inline-block;
    width: auto;
    margin: 0 0.3em;

    i {
      margin-left: 0.2em;
      vertical-align: middle;
      transform: rotate(0);
    }

    &.on {
      i {
        transform: rotate(180deg);
      }
    }
  }
}

/*유효성문구*/
.valid {
  display: none;
  font-size: 12*$unit;
  font-weight: $medium;
  color: $color-error;

  &.on {
    display: flex;
  }

  i {
    flex: 0 0 auto;
    margin: 0.083333em 4*$unit 0.083333em 0;
    width: 1.333333em;
    height: 1.333333em;
    vertical-align: text-top;
  }
}

%input-common {
  @include line();
  border: 1px solid $dark-18; //인풋 보더
  background-color: white;

  &::placeholder {
    font-weight: $regular;
    color: $dark-30;
  }
}

input {
  @extend %input-common;
  padding: 0 1em; //인풋 내부여백
  min-height: 40*$unit; //인풋 높이
}

textarea {
  @extend %input-common;
  padding: 0.8em 1em;
  height: 228*$unit;
  white-space: pre-line;
}

/*데이트피커*/
.datepicker {
  @extend input;
}

.checkbox, .radio {
  @extend %m15;

  input {
    padding: 0;
    width: 1.333333em;
    height: 1.33333em;
    min-height: unset;
    background: url("../img/i_ch.svg") no-repeat;
    background-size: contain;

    &:checked {
      border: 0;
      background-image: url("../img/i_ched.svg");

      & + * {
        font-weight: $bold;
        color: $color-primary;
      }
    }
  }

  label {
    min-height: 1.333333em;
  }
}

.radio {
  input {

    &:checked {
    }
  }
}

.select {
  position: relative;
  @include line();
  padding: 8*$unit 40*$unit 8*$unit 12*$unit;
  height: 40*$unit;
  border: 1px solid $dark-18;
  background: url("../img/i_select_c.svg") no-repeat center right 12*$unit;
  background-size: 16*$unit;
  text-align: left;

  @include click-btn_bg();
}

.usertype {
  position: relative;
  display: flex;
  align-items: center;
  width: auto;
  @extend %m12;

  .tag {
    display: flex;
    align-items: center;
    padding: 0 0.666666em;
    height: 1.666666em;
    background: $color-primary;
    color: white;
  }

  i {
    margin-left: 0.333333em;
    width: 1.333333em;
    height: 1.333333em;
    background: url("../img/i_info.svg") no-repeat;
    background-size: contain;
    opacity: 0.18;
  }

  &_guide {
    z-index: 1;
    @include position(absolute, 0, 70%);
    display: none;
    width: 300*$unit;
    border: 1px solid $dark;
    background: white;
    @extend %m15;

    &.on {
      display: block;
    }

    &.left {
      left: unset;
      right: 0;
    }

    &__ttl {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 48*$unit;
      border-bottom: 1px solid $dark-18;
    }

    &__con {
      padding: 16*$unit 20*$unit;
      color: $dark-60;
      text-align: left;

      ul {
        display: flex;
        gap: 20*$unit;

        & > * {
          flex: 0 0 auto;
        }
      }

      b {
        display: inline-block;
        margin-bottom: 8*$unit;
        color: $dark;
      }

      em {
        color: $color-primary;
      }

      small {
        display: flex;
        margin-top: 16*$unit;
        @extend %m12;
        color: $dark-30;
        word-break: keep-all;

        &:before {
          content: "·";
        }
      }
    }
  }
}

.table {
  width: 100%;
  min-width: 540*$unit;
  border: 1px solid $dark-18;

  &__wrap {
    overflow: auto;
  }

  &__ttl {
    margin-bottom: 16*$unit;
    color: $dark-60;
  }

  th {
    padding: 12*$unit;
    background: $dark-05;
    @extend %m12;
    color: $dark-30;
  }

  td {
    padding: 12*$unit 4*$unit;
    text-align: center;
    color: $dark-30;
  }

  tbody {
    tr {
      border-bottom: 0.8px solid $dark-18;

      &:last-child {
        border-bottom: 0;
      }
    }
  }

  .ttl {
    display: flex;
    gap: 4*$unit;
    padding: 12*$unit;
    text-align: left;
    color: $dark;

    b {
      flex: 0 0 auto;
      color: $color-primary;
    }
  }

  .on {
    color: $dark;
  }

  .small {
    @extend %m12;
    color: $dark-60;
  }

  em {
    @extend %m12;
    color: $color-primary;
  }
}